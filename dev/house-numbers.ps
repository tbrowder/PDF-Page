%!PS-Adobe-3.0
%% Author: Tom Browder
%% Dec 2016
%%Orientation: Landscape
% width height in PS points:
<< /PageSize [1728 2592] /Orientation 0 >> setpagedevice

save
%
% definitions:

%==============================================================
% this is used for a parent file which includes other EPS files
% see Adobe PS 2e, Example H.2, p. 726
/BeginEPSF { % def
  /b4_Inc_state save def                % Save state for cleanup
  /dict_count countdictstack def        % Count objects on dict stack
  /op_count count 1 sub def             % Count objects on operand stack
  userdict begin                        % Push userdict on dict stack
  /showpage {} def                      % Redefine showpage, {} = null proc
  0 setgray 0 setlinecap                % prepare graphics state
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [] 0 setdash newpath
  /languagelevel where                  % if level not equal to 1 then
    {pop languagelevel                  % set strokeadjust and
    1 ne                                % overprint to their defaults.
    {false setstrokeadjust
     false setoverprint
    } if
  } if
} bind def
%==============================================================

%==============================================================
% this is used for a parent file which includes other EPS files
% see Adobe PS 2e, Example H.3, p. 726
/EndEPSF {                        % def
  count op_count sub {pop} repeat % Clean up stacks
  countdictstack dict_count sub {end} repeat
  b4_Inc_state restore
} bind def
%==============================================================

% some aliases
/mt {moveto} bind def
/lto {lineto} bind def
/np {newpath} bind def
/cp {closepath} bind def
/rl {rlineto} bind def
/rm {rmoveto} bind def
/tr {translate} bind def
/st {stroke} bind def
/rot {rotate} bind def
/sl {setlinewidth} bind def
/p2i {72 div} bind def           % convert points to inches
/i2p {72 mul} bind def           % convert inches to points
/mm2p {25.4 div 72 mul} bind def % convert millimeters to points
/a2p {60 div 72 mul} bind def    % convert ASI units (60ths of an inch) to points
/ft2pt 1 def % value normally generated by brldraw; default is 1

/tf  {/Times-Roman 12 selectfont} def
/tf8 {/Times-Roman  8 selectfont} def
/tf7 {/Times-Roman  7 selectfont} def
/bf  {/Times-Bold  12 selectfont} def
/sf  {/Symbol      10 selectfont} def % degree: \260  minus: \055
/sf9 {/Symbol       9 selectfont} def % degree: \260  minus: \055

/bf48  {/Times-Bold  48 selectfont} def

% various constants:
/lw1 {1.5 setlinewidth} bind def % main line width (in points)
/lw2 {.75 setlinewidth} bind def % dimension and label line width (in points)
/lengthxyz {20} def % nominal length of a coordinate arrow
/textspace {6} def % space between text and any other object
/ticlen {5} def % length of major tic mark on a scale
/ang_width {.4 72 mul} bind def
/ang_diag {ang_width 45 cos div} bind def
/ds 5 def  % space between point to be dimensioned and the 'hash' mark
/dh 20 def % length of has mark to dimension line
/dt 5 def  % extra hash line 'above' hash mark
/xtra ang_diag ang_width sub 45 cos mul def
% aim point marker
/numleafs 4 def
/apfontsize 7 def
/aprad apfontsize .8 mul def
/aplen 16 def
/aptheta 60 def
/apwid 4 def
/aplw .9 def

% old usage:     /fontname findfont size scalefont setfont
% level 2 usage: /fontname size selectfont

/puttext { % string location_code [integer: 0-11] (to place--relative to the current point); must have a current and correct font
  /code exch def
  /stname exch def
  gsave
  currentpoint translate np
  0 0 mt stname false charpath flattenpath pathbbox
  /ury exch def
  /urx exch def
  /lly exch def
  /llx exch def
  /mx urx llx add .5 mul def
  /my ury lly add .5 mul def

  0 code eq {/ox 0 mx  sub def /oy 0 my  sub def} if %               center of text bounding box positioned at the current point
  1 code eq {/ox 0 llx sub def /oy 0 my  sub def} if %  center of left edge of text bounding box positioned at the current point
  2 code eq {/ox 0 llx sub def /oy 0 lly sub def} if %    lower left corner of text bounding box positioned at the current point
  3 code eq {/ox 0 mx  sub def /oy 0 lly sub def} if % center of lower edge of text bounding box positioned at the current point
  4 code eq {/ox 0 urx sub def /oy 0 lly sub def} if %   lower right corner of text bounding box positioned at the current point
  5 code eq {/ox 0 urx sub def /oy 0 my  sub def} if % center of right edge of text bounding box positioned at the current point
  6 code eq {/ox 0 urx sub def /oy 0 ury sub def} if %   upper right corner of text bounding box positioned at the current point
  7 code eq {/ox 0 mx  sub def /oy 0 ury sub def} if % center of upper edge of text bounding box positioned at the current point
  8 code eq {/ox 0 llx sub def /oy 0 ury sub def} if %    upper left corner of text bounding box positioned at the current point

  9 code eq {/ox 0 llx sub def /oy 0         def} if % on base line (y of current point), left-justified on current point
 10 code eq {/ox 0 mx  sub def /oy 0         def} if % on base line (y of current point), centered horizontally
 11 code eq {/ox 0 urx sub def /oy 0         def} if % on base line (y of current point), right-justified on current point

  ox oy translate

  gsave
  %0 setgray
  np 0 0 mt stname show
  grestore

%for debug
%  gsave
%  [3] 0 setdash
%  .1 setlinewidth np
%  llx lly mt urx lly lineto urx ury lineto llx ury lineto closepath stroke
%  grestore

  grestore
} def % puttext

/border {
  gsave
  2 setlinewidth
  1 i2p dup moveto
  6.5 i2p 0 rlineto
  0 9 i2p rlineto
  -6.5 i2p 0 rlineto
  closepath stroke
  1 i2p 9.5 i2p moveto 6.5 i2p 0 rlineto stroke

  grestore
} def

/landborder {
  gsave
  2 setlinewidth
  .5 i2p dup moveto
  10.0 i2p 0 rlineto
  0 7.5 i2p rlineto
  -10.0 i2p 0 rlineto
  closepath stroke
%  1 i2p 9.5 i2p moveto 6.5 i2p 0 rlineto stroke

  grestore
} def

% imported definitions -----------------------------------------------------------
%                    Shorthand for common PostScript operators
%
/NP { newpath } def
/CP { closepath } def
/LN { lineto } def
/MV { moveto } def
/PL { stroke } def
/LW { setlinewidth } def
%
%
%             Set up values for DEFPAGE
%
/defpage [0.0 0.0 0.0 0.0] def
%
%             Define DRAWSEG routine
%
/DS
 { NP
   MV
   LN
   CP
   LW
   PL } def

%%EndProlog

%------------------------------------------
/pathtextdict 26 dict def

/pathtext
 { pathtextdict begin
   /offset exch def
   /str exch def

   /pathdist 0 def
   /setdist offset def
   /charcount 0 def
   gsave
     flattenpath

     {movetoproc}{linetoproc}
       {curvetoproc}{closepathproc}
       pathforall

   grestore
   newpath
   end
} def

pathtextdict  begin
/movetoproc
  { /newy exch def /newx exch def
    /firstx newx def /firsty newy def
    /ovr 0 def
    newx newy transform
    /cpy exch def /cpx exch def
} def

/linetoproc
{ /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  dist 0 ne
  { /dsx dx dist div ovr mul def
    /dsy dy dist div ovr mul def

    oldx dsx add oldy dsy add transform
    /cpy exch def /cpx exch def
    /pathdist pathdist dist add def
    { setdist pathdist le

      { charcount str length lt
	{setchar}{exit} ifelse }
	{ /ovr setdist pathdist sub def
	  exit }
      ifelse
    } loop
  } if
} def

/curvetoproc
{ (ERROR: No curveto's after flattenpath!) print
} def

/closepathproc
{ firstx firsty linetoproc
  firstx firsty movetoproc
} def

/setchar
{ /char str charcount 1 getinterval def

  /charcount charcount 1 add def
  /charwidth char stringwidth pop def
  gsave
    cpx cpy itransform translate
    dy dx atan rotate
    0 0 moveto char show
    currentpoint transform
    /cpy exch def /cpx exch def
  grestore
  /setdist setdist charwidth add def
} def
end

%**** user definitions go here ******************************************************************************

%%%%%%% BEGIN PAGE
%%%%%%% begin text
% "paper" is 2' x 3'; in PS points: 1728 2592
gsave
24 i2p 0 translate
90 rotate

% temp scale
gsave
%0.25 dup scale

% outline paper area
newpath 0 0 moveto
36 i2p 0 rlineto
0 24 i2p rlineto
-36 i2p 0 rlineto
closepath stroke

% sizes are in inches
/bf3  {/Times-Bold       3   i2p selectfont} def
/bf4  {/Times-Bold       4   i2p selectfont} def
/bf45 {/Times-Bold       4.5 i2p selectfont} def
/tf1  {/Times-Roman      1   i2p selectfont} def
/tf15 {/Times-Roman      1.5 i2p selectfont} def
/bf2  {/Times-Bold       2   i2p selectfont} def
/bf25 {/Times-Bold       2.5 i2p selectfont} def
/bi25 {/Times-BoldItalic 2.5 i2p selectfont} def
/tf15 {/Times-Roman      1.5 i2p selectfont} def
/bf15 {/Times-Bold       1.5 i2p selectfont} def

% for AL
% Congratulations Graduate
%      Anne Lawton

% balloon images
%    May 29, 2021
% balloon images

% Happy Birthday
%    Tom III

% adjust text easily

% Congratulations Graduate
/lin1-x 18  i2p def
/lin1-y 19 i2p def
/lin1-s 1  def % scale

% Anne Lawton
/lin2-x 18  i2p def
/lin2-y 13.5 i2p def
/lin2-s 1  def % scale

% 2021-05-29
/lin3-x 18  i2p def
/lin3-y 8 i2p def
/lin3-s 1  def % scale

% Happy Birthday
/lin4-x 18  i2p def
/lin4-y 8 i2p def
/lin4-s 1  def % scale

% Tom III
/lin5-x 18  i2p def
/lin5-y 2.5 i2p def
/lin5-s 1  def % scale

%======================
% Boo & Papa
/lin6-x 35  i2p def
/lin6-y 1 i2p def
/lin6-s 1  def % scale

% big text
gsave
0 0 1 setrgbcolor
bf45
gsave
%lin1-s
lin1-x lin1-y  moveto (Congratulations Graduate) 10 puttext % on baseline, centered horizontally
grestore
grestore

gsave
1 0 0 setrgbcolor
bf45
gsave
%lin2-s
lin2-x lin2-y moveto (Anne Lawton!) 10 puttext
grestore
grestore


gsave
0 0 1 setrgbcolor
bf45
gsave
%lin3-s
lin3-x lin3-y moveto (2021-05-29) 10 puttext
grestore
grestore

gsave
0 0 1 setrgbcolor
bf45
gsave
%lin4-s
lin4-x lin4-y moveto (Happy Birthday) 10 puttext
grestore
grestore

gsave
0 0 1 setrgbcolor
bf45
gsave
%lin5-s
lin5-x lin5-y moveto (Tom III!) 10 puttext
grestore
grestore


% Boo & Papa
gsave
0 0 1 setrgbcolor
tf1
gsave
%lin6-s
lin6-x lin5-y moveto (Boo & Papa) 11 puttext % on baseline, right-justified
grestore
grestore



%% gsave
%% 0 1 0 setrgbcolor
%% bf2
%% gsave
%% fre-s
%% /fd-y  2 i2p def % for delta baseline
%% fre-x fre-y moveto (WHICH OS) 10 puttext % center on baseline
%% fre-x fre-y fd-y sub  moveto (IS FREE?) 10 puttext
%% grestore
%% grestore

%% gsave
%% 0 0 0 setrgbcolor
%% bf15
%% gsave
%% wrd-s
%% % two or more lines
%% /wd-y  -1.6 i2p def % for delta baseline
%% wrd-x wrd-y moveto (Thousands of free apps available,) 11 puttext % right-justified on baseline
%% 0     wd-y rmoveto (including clones of products from) 11 puttext % right-justified on baseline
%% 1 0 0 setrgbcolor
%% 0     wd-y rmoveto (Microsoft) 11 puttext % right-justified on baseline
%% 0     wd-y rmoveto (Adobe) 11 puttext % right-justified on baseline
%% 0     wd-y rmoveto (Quicken) 11 puttext % right-justified on baseline
%% grestore
%% grestore

%%% pictures here

%% adjust pics easily
% looks like origin is in ll corner
% Mickey Mouse in classic pose
/pic1-x 27 i2p def
/pic1-y 11 i2p def
%/tux-s 1  def % scale
/pic1-s .7  def % scale

% looks like origin is in ll corner
% Heart, fancy outline
/pic2-x 29 i2p def
/pic2-y .9 i2p def
/pic2-s .25  def % scale

% looks like origin is in ll corner
% Pluto
/pic3-x 3 i2p def
/pic3-y 11 i2p def
/pic3-s .7  def % scale

%%%%=======================================================
%% start-picture
% establish orientation, etc.
gsave
%8.5 i2p 0 translate
%90 rotate
%.9 dup scale
pic3-x pic3-y translate
pic3-s dup scale
gsave
BeginEPSF
%%%% begin input EPS file =======================================
% BEGIN EPS FILE: pluto-29.eps ==============================

% END EPS FILE: pluto-29.eps ==============================
%%%% end of input EPS file =======================================
EndEPSF
grestore
grestore
%% end-picture
%%%%=======================================================

%%%%=======================================================
%% start-picture
% establish orientation, etc.
gsave
%8.5 i2p 0 translate
%90 rotate
%.9 dup scale
pic1-x pic1-y translate
pic1-s dup scale
gsave
BeginEPSF
%%%% begin input EPS file =======================================
% BEGIN EPS FILE: mickey-e-2-p2-25.eps ==============================


% END EPS FILE: mickey-e-2-p2-25.eps ==============================
%%%% end of input EPS file ===================================
EndEPSF
grestore
grestore
%% end-picture
%%%%=======================================================

%%%%=======================================================
%% start-picture
% establish orientation, etc.
gsave
%8.5 i2p 0 translate
%90 rotate
%.9 dup scale
pic2-x pic2-y translate
pic2-s dup scale
gsave
BeginEPSF
%%%% begin input EPS file =======================================
% BEGIN EPS FILE: Heart-18.epss ==============================
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.14.8 (http://cairographics.org)
%%CreationDate: Sun Jan 13 16:49:38 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 -1 241 239
%%EndComments
%%BeginProlog
save
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 -1 241 239
%%EndPageSetup
q 0 -1 241 240 rectclip q
%0.113725 0.113725 0.105882 rg
1 0 0 rg
118.902 209.1 m 103.828 229.35 84.328 240.373 57.777 238.202 c 31.23 236.026
 -1.098 213.373 0.027 173.623 c 1.152 133.873 30.254 110.998 55.754 96.452
 c 94.152 74.549 141.629 61.35 125.953 -0.002 c 140.504 31.049 132.703 57.151
 108.254 83.924 c 75.48 119.85 27.254 132.526 27.254 178.498 c 27.254 224.475
 84.328 243.373 118.902 209.1 c h
118.902 209.1 m f
111.93 191.776 m 126.629 220.498 150.703 238.424 177.855 238.424 c 205.004
 238.424 233.652 222.225 239.277 188.475 c 252.105 111.373 146.055 106.725
 141.254 59.248 c 137.129 104.248 223.379 109.799 221.652 178.873 c 221.055
 203.998 202.68 224.702 176.504 226.725 c 138.402 229.725 111.93 191.776
 111.93 191.776 c h
111.93 191.776 m f
Q Q
showpage
%%Trailer
end restore
%%EOF
% END EPS FILE: Heart-18.epss ==============================
%%%% end of input EPS file ===================================
EndEPSF
grestore
grestore
%% end-picture
%%%%=======================================================


%%%%=======================================================
%%% end pictures

grestore

grestore

%%%%%% end text

%**** end user definitions ******************************************************************************
%=============================
showpage
%restore
%=============================
% END OF *PostScript* FILE
%=============================
